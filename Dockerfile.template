# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/#dockerfile-templates
# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/
ARG NODEJS_VERSION="17"
FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:${NODEJS_VERSION}-bookworm

# install python3
RUN apt-get update \
    && apt-get install --no-install-recommends -y python3 build-essential \
    && apt-get clean

# Defines our working directory in container
WORKDIR /usr/src/app

# Copies the package.json first for better cache on later pushes
COPY package*.json ./

# This will copy all files in our root to the working directory in the container
COPY . ./

RUN yarn global add node-gyp --network-timeout 600000
RUN yarn install --network-timeout 600000
RUN yarn cache clean

# piTFT
# RUN pip3 install adafruit-circuitpython-rgb-display
# RUN pip3 install --upgrade --force-reinstall spidev
# RUN sudo pip3 install --upgrade adafruit-python-shell click
# RUN sudo apt-get install -y git
# RUN git clone https://github.com/adafruit/Raspberry-Pi-Installer-Scripts.git
# RUN cd Raspberry-Pi-Installer-Scripts
# RUN sudo python3 adafruit-pitft.py --display=st7789_240x240 --rotation=0 --install-type=console


# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# server.js will run when container starts up on the device
CMD ["npm", "start"]
